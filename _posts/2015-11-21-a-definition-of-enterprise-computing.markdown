---
published: true
title: A Definition of Enterprise Computing
layout: post
---
# A Working Definition of Enterprise Computing\n\nSince I\'m likely to be talking about it in other postings, I\'ll define what\nI mean by Enterprise Computing.\n\nIn my way of thinking, I don\'t consider customer-facing applications --\nregardless of size or arrival/throughput rates -- as Enterprise Computing\napplications.  Critical, complex, a vital component of some business\nmodels, yes.  But customer-facing fashion is fickle and rapidly changing,\nand that should be built into the application expectations regarding\nlongevity and costs for rewrites.  Now the underlying architecture and\ntools that support those ... Now we\'re talking.\n\nA further pre-note:  Developer-oriented, publicly exposed API\'s fall into\nthe same category.  These are products, not: *The infrastructure that an\nongoing business relies upon in order to promote and deliver its products.*\n\n## Enterprise Computing:\n*Maintains central repositories of organization-wide data\n*Provides access to data and services used by internal and external facing\napplications\n*Is required to provide for the needs of multiple sub-organizations with\nguidance and support for common infrastructure, architectures, standards,\nprocedures and technical capabilities\n*Is subject to an eternal pendulum balancing between centrailzed vs.\ndecentralized decision making and authority\n*Provides the infrastructure and standards to support all of the above, and\nincluding required cross-application messaging support\n*Is expected to provide a high level of stability, consistency,\nreliability, and longevity